= render :partial => 'shared/header_vote', :locals => {"show_delete" => true, :question => @question}
.ninety
  %table.full.tablesorter
    %thead 
      %tr.row0
        %th
          = @question.attributes['name']
        %th.score=  t('items.score')
        %th.score=  t('questions.source')
        %th.score= t('items.list.status').titleize
    %tbody 
      -for choice in @choices #.sort_by {|x| [(!!x.attributes['active']).to_s, x.data]}
        %tr{:class => cycle ("row1", "row2")}
          %td.title= link_to truncate(h(choice.data), :length => 137), :action => 'show', :controller => "choices", :id => choice.id, :question_id => @earl.name
          %td.votes= choice.attributes['score'].round.to_s + ' ' + link_to('[?]', '#explanation', :rel => 'facebox')
          %td.votes= choice.attributes['user_created'] ? t('admin.user') : t('admin.seed')
          %td.votes{:id => "choice_#{choice.id}_status"}
            -if @choices.size < 3
              = choice.active? ? t('items.list.activated') : t('items.list.deactivated')
            -else 
              .toggle_choice_status{:rel => choice.id, :id => "choice_#{choice.id}_toggle", :earl_id => @earl.id, :status => "#{choice.active?}" }
                = choice.active? ? rounded("Activated", 'round-filled') : rounded("Deactivated", 'round-filled-grey')
  %br

  %p
    = t('admin.this_question_created') + " #{time_ago_in_words(@earl.created_at)} " + t('admin.ago') 
    = t('admin.and_registered_to') + ": " + @earl.user.email
  
  %table.full
    %tr.row0
      %th
        = t('admin.optional_question_settings')
      %th.score{:style => "text-align: center"}= t('items.list.status').titleize 
      -#%th &nbsp;
    %tr.row1
      %td.title= t('admin.auto_activate_exp')
      %td.votes{:id => "question_#{@question.id}_autoactivate_status"}
        .toggle_autoactivate_status{:question_id => @question.id, :id => "question_#{@question.id}_autoactivate_toggle", :status => "#{@question.it_should_autoactivate_ideas?}" }
          = @question.it_should_autoactivate_ideas? ? rounded("Enabled", 'round-filled') : rounded("Disabled", 'round-filled-grey')
      -#%td=link_to('[' + t('items.list.toggle') + ']', '#', :class => 'toggle_autoactivate_status', :question_id => @question.id)
  %br
  %table.full
    %tr.row0
      %th{:colspan => 2}=t('admin.additional_settings')
    -form_for :earl, @earl, :url => { :action => "update" }, :html => {:method => :put, :multipart => true} do |f|
      -unless f.error_messages.blank?
        :javascript
          $(document).ready(function(){
            document.getElementById('errorExplanation').scrollIntoView(true);
          });
        %tr.row2
          %td{:colspan => 2}=f.error_messages
      %tr.row1
        %td= "#{t('admin.password_protect_exp')}:"
        %td 
          = "#{t('admin.username')}: #{@earl.name}"
          %br
          = f.label :pass, "#{t('user.password')}:"
          = f.text_field :pass, :id => "passfield", :class => 'highlight_change'
          %tr.row2
            %td 
              -if @earl.logo_file_name
                ="#{t('admin.replace_logo_exp')}: "
              -else
                ="#{t('admin.upload_logo_exp')}: "
            %td
              = f.file_field :logo
          %tr.row1 
            %td
              = t('admin.welcome_msg_exp')
              =link_to('[?]', '#welcome_msg_explanation', :rel => 'facebox')

            %td
              = f.text_area :welcome_message, :rows => 4, :cols => 65
          %tr.row2
            %td= t('admin.default_lang_exp')
            %td
              = f.select :default_lang, [["English", "en"], ["French", "fr"], ["Spanish", "es"], ["Portuguese", "pt"]]
          %tr.row1
            %td
              = t('admin.allow_flag_as_inappropriate')
              =link_to('[?]', '#allow_flag_as_inappropriate_exp', :rel => 'facebox')
            %td 
              = f.select :flag_enabled, [["Enabled", true], ["Disabled", false]]
          - if current_user.admin?
            %tr.row2
              %td
                = t('admin.google_analytics_code') 
                =link_to('[?]', 'http://blog.allourideas.org', :target=> '_blank')
              %td 
                = f.text_field :ga_code, :class => 'highlight_change'
          %tr.row2
            %td{:colspan => 2}
              = submit_tag "Save", {:id => "savebutton", :class => "fright", :style => "margin: 0 10px 0px 0"}
  %b

  %table.full
    %tr.row0
      %th= t('admin.download_idea_marketplace_data')
      %th &nbsp;
      %th &nbsp;
    %tr.row1
      %td.title= t('admin.list_of_ideas_csv')
      %td &nbsp;
      %td
        =# link_to('[Download]', :url => "#{API_HOST}/questions/#{@question.id}/export", :method => :post, :params => {:type => :items}
        = link_to('[' + t('admin.request') + ']', {:action => :export, :params => {:type => :ideas}}, :rel => 'facebox', :id => 'ideas_request_link')
    %tr.row2
      %td.title= t('admin.list_of_votes_csv') 
      %td &nbsp;
      %td
        = link_to('[' + t('admin.request') + ']', {:action => :export, :params => {:type => :votes}}, :rel => 'facebox',:id => 'votes_request_link')
    %tr.row1
      %td.title= t('admin.list_of_non_votes_csv') 
      %td &nbsp;
      %td
        = link_to('[' + t('admin.request') + ']', {:action => :export, :params => {:type => :non_votes}}, :rel => 'facebox', :id => 'non_votes_request_link')
      
    
  #explanation{:style => 'display:none;'}
    %h2= t('items.about_scoring')
    =t('items.score_explain')
    
  #welcome_msg_explanation{:style => 'display:none;'}
    %h2= "Optional Welcome Message"
    = t('admin.welcome_msg_long_exp')
    %br
    = t('admin.welcome_msg_long_exp2')
  
  #allow_flag_as_inappropriate_exp{:style => 'display:none;'}
    = t('admin.allow_flag_as_inappropriate_exp')


-content_for :head do
  = javascript_include_tag 'facebox', 'jquery.tablesorter.min.js', 'jquery.blockUI.js'
  = stylesheet_link_tag 'facebox'

- content_for :view_javascript do
  $('.tablesorter').tablesorter({ headers: { 0: {sorter: 'text'}, 1 : { sorter: 'digit' } , 2 : { sorter: 'text' }, 3 : { sorter: 'text'}, 4 : { sorter: false }, } });
  $('.tablesorter').bind('sortEnd', function() {
  $('.tablesorter tbody tr:nth-child(odd)').removeClass('row1 row2').addClass('row1');
  $('.tablesorter tbody tr:nth-child(even)').removeClass('row1 row2').addClass('row2');});
  $('.tablesorter thead tr th').hover(function() { $(this).addClass("headerOver"); } , function() { $(this).removeClass("headerOver"); });
  $('a[rel*=facebox]').facebox();
  $('#facebox').draggable();
  $('.highlight_change').change(function(){ $('#savebutton').addClass("active")});
  $('#earl_logo').change(function(){ $('#savebutton').addClass("active")});
  $('#earl_flag_enabled').change(function(){ $('#savebutton').addClass("active")});
  $('#earl_default_lang').change(function(){ $('#savebutton').addClass("active")});

