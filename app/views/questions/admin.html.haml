= content_for :meta do
  <META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
= render :partial => 'shared/header_vote', :locals => {"show_delete" => true, :question => @question}

.row
  .span12
    #question-saved.alert.alert-success.hide
      %p= t('questions.question_saved')
    %table.table.table-bordered.table-striped.table-condensed.tablesorter
      %thead 
        %tr
          %th
            %span.question-name
              = @question.attributes['name']
            - if ((@question.votes_count == 0 && current_user.owns?(@earl)) || current_user.admin?)
              = link_to("[#{t('questions.edit')}]", '#edit-question', :"data-toggle" => 'modal')
            - else
              = link_to("[#{t('questions.edit')}]", '#cant-edit-question', :"data-toggle" => 'modal')
          %th.score=  t('items.score')
          %th.score=  t('questions.source')
          %th.score= t('items.list.status').titleize
      %tbody 
        -for choice in @choices #.sort_by {|x| [(!!x.attributes['active']).to_s, x.data]}
          %tr
            %td.title= link_to h(truncate(choice.data, :length => 140, :omission => 'â€¦')), :action => 'show', :controller => "choices", :id => choice.id, :question_id => @earl.name
            %td.votes= choice.attributes['score'].round.to_s + ' ' + link_to('[?]', '#score_explanation', :"data-toggle" => 'modal')
            %td.votes= choice.attributes['user_created'] ? t('admin.user') : t('admin.seed')
            %td.votes{:id => "choice_#{choice.id}_status"}
              -if @choices.size < 3
                = choice.active? ? t('items.list.activated') : t('items.list.deactivated')
              -else 
                %button.toggle_choice_status.btn{:class => choice.active? ? 'btn-primary' : '', :"data-earl_id" => @earl.id, :"data-choice_id" => choice.id, :"data-status" => "#{choice.active?}"}
                  = choice.active? ? 'Activated' : 'Deactivated'
    %p
      = t('admin.this_question_created') + " #{time_ago_in_words(@earl.created_at)} " + t('admin.ago') 
      = t('admin.and_registered_to') + ": " + @earl.user.email

.row
  .span12
    %h3= t('admin.optional_question_settings')
    .row
      .span10
        %p= t('admin.auto_activate_exp')
      .span2
        %button.toggle_autoactivate_status.btn{:class => @question.it_should_autoactivate_ideas? ? 'btn-primary' : '', :"data-question_id" => @question.id, :"data-status" => "#{@question.it_should_autoactivate_ideas?}"}
          = @question.it_should_autoactivate_ideas? ? 'Enabled' : 'Disabled'

.row
  .span12
    -form_for :earl, @earl, :url => { :action => "update" }, :html => {:method => :put, :multipart => true, :class => 'form-horizontal'} do |f|
      -unless f.error_messages.blank?
        :javascript
          $(document).ready(function(){
            document.getElementById('errorExplanation').scrollIntoView(true);
          });
        .alert.alert-error
          = f.error_messages
      %fieldset
        %legend=t('admin.additional_settings')
        .control-group
          %label.control-label{:for => 'question_username'}
            = t('admin.username')
          .controls
            = text_field_tag '', @earl.name, :disabled => true, :id => 'question_username'
        .control-group
          = f.label :pass, t('user.password'), :class => 'control-label'
          .controls
            = f.text_field :pass
            %p.help-block
              = t('admin.password_protect_exp')

        .control-group
          -if @earl.logo_file_name
            = f.label :logo_file_name, t('admin.replace_logo_exp'), :class => 'control-label'
          -else
            = f.label :logo_file_name, t('admin.upload_logo_exp'), :class => 'control-label'
          .controls
            = f.file_field :logo
        .control-group
          = f.label :welcome_message, t('admin.welcome_msg_exp') + link_to('[?]', '#welcome_msg_explanation', :"data-toggle" => 'modal'), :class => 'control-label'
          .controls
            = f.text_area :welcome_message, :rows => 4, :cols => 65, :class => 'input-xxlarge'
        .control-group
          = f.label :default_lang, t('admin.default_lang_exp') + link_to('[?]', 'http://blog.allourideas.org/post/5137327337/languages-and-all-our-ideas', :target=> '_blank'), :class => 'control-label'
          .controls
            = f.select :default_lang, [["English", "en"]] + [["French", "fr"], ["Spanish", "es"], ["Portuguese", "pt"], ["Arabic", "ar"], ["Turkish", "tr"], ["Italian", "it"], ["Dutch", "nl"], ["Hebrew", "he"], ["German", "de"], ["Farsi", "fa"], ["Finnish", "fi"]].sort
        .control-group
          = f.label :flag_enabled, t('admin.allow_flag_as_inappropriate') + link_to('[?]', '#allow_flag_as_inappropriate_exp', :"data-toggle" => 'modal'), :class => 'control-label'
          .controls
            = f.select :flag_enabled, [["Enabled", true], ["Disabled", false]]
        .control-group
          = f.label :ga_code, t('admin.google_analytics_code') + link_to('[?]', 'http://blog.allourideas.org/post/947544304/add-google-analytics-on-your-idea-marketplace', :target=> '_blank'), :class => 'control-label'
          .controls
            = f.text_field :ga_code
        .control-group
          %label.control-label
            = t('admin.widget_embed_code') 
            = link_to('[?]', 'http://blog.allourideas.org/post/912665189/improved-widget-gives-you-more-control', :target=> '_blank')
          .controls
            %input.widget-embed-code.input-xxlarge{:type => 'text', :readonly => 'readonly', :size => 30, :value => "<iframe src='http://widget.allourideas.org/#{@earl.name}' width='550' height='650' frameborder='0' scrolling='no'></iframe>"}
        .form-actions
          %button.btn.btn-primary{:type => 'submit'}
            Save

    %table.table
      %thead
        %tr
          %th= t('admin.download_idea_marketplace_data')
      %tbody
        %tr
          %td.title
            = t('admin.list_of_ideas_csv')
            = link_to('[?]', 'http://blog.allourideas.org/post/2739358388/download-your-data', :target=> '_blank')
          %td
            =# link_to('[Download]', :url => "#{API_HOST}/questions/#{@question.id}/export", :method => :post, :params => {:type => :items}
            = link_to('[' + t('admin.request') + ']', {:action => :export, :params => {:type => :ideas}}, :rel => 'facebox', :id => 'ideas_request_link')
        %tr
          %td.title
            = t('admin.list_of_votes_csv') 
            = link_to('[?]', 'http://blog.allourideas.org/post/2739358388/download-your-data', :target=> '_blank')
          %td
            = link_to('[' + t('admin.request') + ']', {:action => :export, :params => {:type => :votes}}, :rel => 'facebox',:id => 'votes_request_link')
        %tr
          %td.title
            = t('admin.list_of_non_votes_csv') 
            = link_to('[?]', 'http://blog.allourideas.org/post/2739358388/download-your-data', :target=> '_blank')
          %td
            = link_to('[' + t('admin.request') + ']', {:action => :export, :params => {:type => :non_votes}}, :rel => 'facebox', :id => 'non_votes_request_link')
        
  #cant-edit-question.modal.hide.fade
    .modal-body
      %p= t('questions.cant_edit_question')
  #edit-question.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h2= t('questions.edit_question')
    .modal-body
      - form_tag update_name_question_path(@earl), :method => :put do |f|
        %p
          =t('questions.your_current_question_text', :question_text => h(@question.name), :"1" => '<span class="question-name">', :"_1" => '</span>')
        %p 
          =t('questions.type_question_prompt')
        = text_area_tag('question[name]', h(@question.name), :rows => 2, :maxlength => 255, :class => 'new_idea_field input-xxlarge', :id => 'edit_question_text')
        %h3.new_idea_counter
    .modal-footer
      %button.btn.cancel Cancel
      %button.btn.btn-primary.new_idea_submit#edit_question_submit{:rel => @question.id}= t('vote.submit')
    
  #score_explanation.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h2= t('items.about_scoring')
    .modal-body
      %p=t('items.score_explain')
    
  #welcome_msg_explanation.modal.hide.fade
    .modal-header
      %button.close{:"data-dismiss" => 'modal'} x
      %h3= "Optional Welcome Message"
    .modal-body
      %p= t('admin.welcome_msg_long_exp')
      %p= t('admin.welcome_msg_long_exp2')
  
  #allow_flag_as_inappropriate_exp.modal.hide.fade
    .modal-body
      %p= t('admin.allow_flag_as_inappropriate_exp')


-content_for :head do
  = javascript_include_tag 'facebox', 'jquery.tablesorter.min.js', 'jquery.blockUI.js'
  = stylesheet_link_tag 'facebox'

- content_for :view_javascript do
  $('.tablesorter').tablesorter({ textExtraction : 'complex', headers: { 0: {sorter: 'text'}, 1 : { sorter: 'digit' } , 2 : { sorter: 'text' }, 3 : { sorter: 'text'}, 4 : { sorter: false }, } });
  $('a[rel*=facebox]').facebox();
  $('#facebox').draggable();
  $('input.widget-embed-code').focus(function(ev) { $(this).select(); ev.preventDefault();});

