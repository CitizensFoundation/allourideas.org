  var loadedTime = new Date();

  handle_history_events = function(event){
    var left_side_text = $('#left_side_text').val();
    var right_side_text = $('#right_side_text').val();

    // This only takes effect if the page is loaded from back or forward buttons
    if(left_side_text && left_side_text != "blank_history" && left_side_text != $('.leftside').html()){
      $('.leftside').html(left_side_text)
    }
    if(right_side_text && right_side_text != "blank_history" && right_side_text != $('.rightside').html()){
      $('.rightside').html(right_side_text)
    }
  }

  handle_history_events();

  $('#the_add_box .new_idea_field').jqEasyCounter({target: '#the_add_box .new_idea_counter'});
  $('#the_add_box button').hide();

  $('#the_add_box').on('focus', 'textarea', function(ev) {
    $('#the_add_box button').show();
    $('#the_add_box .new_idea_counter').show();
  });
  $('#the_add_box').on('blur', 'textarea', function(ev) {
    $('#the_add_box button').hide();
    $('#the_add_box .new_idea_counter').hide();
  });
  // allow enter to add idea
  $('#the_add_box').on('keypress', 'textarea', function(ev) {
    if (ev.which == 13) {
      ev.preventDefault();
      $('#the_add_box button').click();
    }
  });

  // handle submit on add new idea box
  $('#the_add_box').on('click', 'button', function(ev) {
    ev.preventDefault();
    var box = $(ev.delegateTarget);
    var new_idea = box.find('.new_idea_field').val();
    var default_text = $('#default_text').val();
    var question_id = $(ev.currentTarget).data("question_id");

    $('.example_notice').hide();

    // verify new idea is not blank, default or longer than 140 characters
    if (new_idea == 'Add your own idea here...' || new_idea == '' || new_idea == default_text) {
      alert('<%=t('vote.submit_idea_default_error') %>');
      return;
    }
    if (new_idea.length > 140) {
      alert('<%=t('vote.submit_idea_too_long_error') %>');
      return;
    }

    $('.tellmearea').html('');
    $('.indicator').show();
    var data = {authenticity_token : AUTH_TOKEN, new_idea: new_idea};
    var url  = '/questions/' + question_id + '/add_idea.js?locale=<%= I18n.locale %>';
    $.post(url, data, function(data){
      leveling_text = "";
      if(data["leveling_message"] != "") {
        leveling_text = " <br /> " + data["leveling_message"];
      }
      var results_text = '';
      <%- if @question.user_can_view_results?(current_user, @earl) -%>
        results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
      <%- end -%>
      $('.tellmearea').html(data["message"] + leveling_text + results_text).effect("highlight", {}, 1500);
      // keypress is for counter
      $('#new_idea_field').val('').show().keypress().blur();
      $('.indicator').hide();

      if (data['choice_status'] == 'active') {
        current_item_count = $('#item_count').html();
        $('#item_count').html(increment(current_item_count));
      }
      else {
        box.find('.alert-success').html('<%= t('vote.idea_sent_for_review') %>').show();
        setTimeout(function() {
          box.find('.alert-success').hide(300);
        }, 5 * 1000);
      }

    }, "json");
  });


    $('.vote_cell').bind('click',function(event){

        var currentTime = new Date();
  var time_viewed = currentTime - loadedTime


  $('.example_notice').hide();

  // TODO refactor to use url_for in rails
  var the_id = $(this).attr("id");
  var the_locale = "<%= I18n.locale %>"

  var winner_side = (the_id == "left_choice_cell") ? "left" : "right";
  var loser_side = (the_id == "left_choice_cell") ? "right" : "left";

  var question_id = $(this).attr("rel");

  var loser_link = $('a#' + loser_side + 'side');
  var winner_link = $('a#' + winner_side + 'side');

  var loser_url = "/" + loser_link.attr("question_slug") + "/choices/" + loser_link.attr("choice_id");
        var winner_url=  "/" + winner_link.attr("question_slug") + "/choices/" + winner_link.attr("choice_id");


  if(the_locale != 'en'){
    loser_url += '?locale=' + the_locale;
    winner_url += '?locale=' + the_locale;
  }


  var loser = "<a href='" + loser_url +  "'>" + loser_link.html() + "</a>";
  var winner = "<a href='" + winner_url + "'>" + winner_link.html() + "</a>";

  var prompt_id = $('#prompt_id').val()
  var appearance_lookup = $('#appearance_lookup').val()
  $.ajax({
     type: "post",
     url: '/questions/' + question_id + '/prompts/' + prompt_id + '/vote.js' + '?locale=' + the_locale,
     dataType: "json",
     data: {
     'authenticity_token' : AUTH_TOKEN,
     'time_viewed' : time_viewed,
     'prompt_id': prompt_id,
     'appearance_lookup': appearance_lookup,
     'direction' : winner_side
     },
     beforeSend: function() {
         $('.tellmearea').html('');
         $('.indicator').show();
         $.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  {
                 backgroundColor: '#000',
           opacity:         0.0
         }});
     },
     timeout: 10000,
     error: function(request,error) {
         $.unblockUI();
         $('.indicator').hide();
         if (error == "timeout") {
           $('.tellmearea').html('<%= t('vote.vote_timeout_error')%>').effect("highlight", {color: '#ff0000'}, 1500);
         }
         else {
           $('.tellmearea').html("<%= t('vote.vote_other_error') %>").effect("highlight", {color: '#ff0000'}, 1500);
         }

         loadedTime = new Date(); //reset loaded time

     },
     success: function(data){
    $.unblockUI();
    $('.indicator').hide();
    $('.leftside').html(data["newleft"]);
    $('.rightside').html(data["newright"]);

    //used for fraud detection / back button behavior fixing
    $('#left_side_text').val(data["newleft"]);
    $('#right_side_text').val(data["newright"]);

    $('#prompt_id').val(data["prompt_id"]);
    $('#appearance_lookup').val(data["appearance_lookup"]);

    leveling_text = "";
    if(data["leveling_message"] != "")
         leveling_text = " <br /> " + data["leveling_message"];

         if(SHOW_AVERAGE_VOTES == "with_average")
            leveling_text += " " + $('#average_votes').html()
    var results_text = '';
    <%- if @question.user_can_view_results?(current_user, @earl) -%>
    results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
    <%- end -%>

    $('.tellmearea').html("<%= t('vote.you_chose_winner_over_loser', :winner => '%winner%', :loser => '%loser%')%>".replace('%winner%',  winner).replace('%loser%', loser) + leveling_text + results_text).effect("highlight", {}, 1500);
    current_vote_count = $('#votes_count').html();
    $('#votes_count').html(increment(current_vote_count));
    $(".votebox tr.prompt td.idea").each(function(el) {
          $([$(this).children(".round-filledfg"), $(this).children(".round-filled").children()]).each(function(el) {
              $(this).css("background", "#3198c1");
              $(this).css("border-left", "1px solid #3198c1");
              $(this).css("border-right", "1px solid #3198c1");
              $(this).bind("mouseover", function() {
                $([$(this).children(".round-filledfg"), $(this).children(".round-filled").children()]).each(function(el) {
                  $(this).css("background", "#2b88ad");
                  $(this).css("border-left", "1px solid #2b88ad");
                  $(this).css("border-right", "1px solid #2b88ad");
                });
              });
              $(this).bind("mouseout", function() {
                $([$(this).children(".round-filledfg"), $(this).children(".round-filled").children()]).each(function(el) {
                  $(this).css("background", "#3198c1");
                  $(this).css("border-left", "1px solid #3198c1");
                  $(this).css("border-right", "1px solid #3198c1");
                });
              });
            });
        });

                    loadedTime = new Date() //reset loaded time
    }// End success
       }); // End ajax method
    return false;
  });

    // handle can't decide click
    $('#cant_decide_options').on('click', 'button', function(ev) {
      ev.preventDefault();
      var target = $(ev.currentTarget);
      var reason = target.data('reason');
      var question_id = target.data("questionid");
      if (!reason || !question_id) {
        return;
      }
      var time_viewed = (new Date()) - loadedTime
      var prompt_id = $('#prompt_id').val()
      var appearance_lookup = $('#appearance_lookup').val()

      $('.example_notice').hide();
      $('.tellmearea').html('');
      $('.indicator').show();
      $.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  {
          backgroundColor: '#000',
          opacity:         0.0
      }});

      var postData = {
        'authenticity_token' : AUTH_TOKEN,
        'cant_decide_reason' : reason,
        'time_viewed' : time_viewed,
        'appearance_lookup': appearance_lookup
      };
      var url = '/questions/' + question_id + '/prompts/' + prompt_id + '/skip.js' + '?locale=<%= I18n.locale %>';
      $.post(url, postData, function(data) {
        leveling_text = "";
        if(data["leveling_message"] != "") {
          leveling_text = " <br /> " + data["leveling_message"];
        }

        if(SHOW_AVERAGE_VOTES == "with_average") {
          leveling_text += " " + $('#average_votes').html()
        }
        var results_text = '';
        <%- if @question.user_can_view_results?(current_user, @earl) -%>
          results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
        <%- end -%>
        feedback = data["message"] + leveling_text + results_text;
        $('.tellmearea').html(feedback).effect("highlight", {}, 1500);
        $('.indicator').hide();
        $.unblockUI();
        $('.leftside').html(data["newleft"]);
        $('.rightside').html(data["newright"]);

        //used for fraud detection / back button behavior fixing
        $('#left_side_text').val(data["newleft"]);
        $('#right_side_text').val(data["newright"]);

        $('#prompt_id').val(data["prompt_id"]);
        $('#appearance_lookup').val(data["appearance_lookup"]);
        //clear the radio buttons somehow?
        loadedTime = new Date() //reset loaded time
      },"json");
    });


    // handle flag inappropriate clicks
    // flag_side is used later on submit to determine which choice
    // is being marked as inappropriate
    var flag_side = null;
    $('.flag_link').click(function(ev) {
      ev.preventDefault();
      flag_side = $(this).attr('id');
      $('#flag_inappropriate textarea').val('');
    });

    $('#flag_inappropriate').on('click', 'button', function(ev) {
      var user_text = null;
      user_text = $('#flag_inappropriate textarea').val();
      if (!user_text) {
        alert("You must include an explanation");
        return;
      }
      $('#flag_inappropriate').modal('hide');

      var time_viewed = (new Date()) - loadedTime
      var prompt_id = $('#prompt_id').val();
      var appearance_lookup = $('#appearance_lookup').val();
      var question_id = $(ev.currentTarget).data('question_id');

      $('.example_notice').hide();
      $('.tellmearea').html('');
      $('.indicator').show();

      $.blockUI({ message: null, fadeIn: 0, fadeOut:  0, overlayCSS:  {
          backgroundColor: '#000',
          opacity:         0.0
      }});

      var url = '/questions/' + question_id + '/prompts/' + prompt_id + '/flag.js'+ '?locale=<%= I18n.locale %>';
      var postData = {
        'authenticity_token' : AUTH_TOKEN,
        'flag_reason' : user_text,
        'time_viewed' : time_viewed,
        'side': flag_side,
        'appearance_lookup': appearance_lookup
      };
      $.post(url, postData, function(data) {
        if (data["error"]) {
          window.location.replace(data["redirect"]);
        }
        else {
          leveling_text = "";
          if (data["leveling_message"] != "") {
            leveling_text = " <br /> " + data["leveling_message"];
          }
          if (SHOW_AVERAGE_VOTES == "with_average") {
            leveling_text += " " + $('#average_votes').html()
          }
          var results_text = '';
          <%- if @question.user_can_view_results?(current_user, @earl) -%>
            results_text = "<br/><a href='" + "<%= url_for(:action => 'results', :controller => :questions) %>" + "'>" + "<%=t('vote.view_all_the_results') %>" + "</a>";
          <%- end -%>
          $('.tellmearea').html(data["message"] + leveling_text + results_text).effect("highlight", {}, 1500);
          $('.indicator').hide();
          $.unblockUI();
          $('.leftside').html(data["newleft"]);
          $('.rightside').html(data["newright"]);

          //used for fraud detection / back button behavior fixing
          $('#left_side_text').val(data["newleft"]);
          $('#right_side_text').val(data["newright"]);

          $('#prompt_id').val(data["prompt_id"]);
          $('#appearance_lookup').val(data["appearance_lookup"]);
          current_item_count = $('#item_count').html();
          $('#item_count').html(decrement(current_item_count));
          loadedTime = new Date() //reset loaded time
        }
      }, "json");
    });
