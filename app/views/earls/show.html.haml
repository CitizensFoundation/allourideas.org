-@item_data, @item_ids = [], []
= render :partial => 'shared/header_vote'

.votebox
  %table.full
    %tr
      %td{:colspan => 3}= rounded(@question.attributes['name'], 'border')
    %tr.prompt.prompter
      %td.half.idea.left.vote_cell{:rel => @question.id, :id => "left_choice_cell"}
        = rounded(render(:partial => 'questions/idea', :locals => {:data => @left_choice_text, :side => "leftside", :choice_id => @left_choice_id}), 'round-filled')
      %td
      %td.idea.right.vote_cell{:rel => @question.id, :id => "right_choice_cell"}
        = rounded(render(:partial => 'questions/idea', :locals => {:data => @right_choice_text, :side => "rightside", :choice_id => @right_choice_id}), 'round-filled')
  %table.vote-footer
    %tr
      //%td.feedback= link_to(t('nav.feedback'), quick_link('vote/feedback', "#"))
      %td.skip= link_to(t('vote.cant_decide'), {:anchor => "cant_decide_options"}, :id => "cant_decide_btn", :rel => 'facebox')
      - ab_test(@ab_test_name, %w{sixteen_pixel_font twelve_pixel_font}, :conversion => 'voted') do |theClass|
        %td{:class => theClass}
          ="<span id='votes_count'>#{@votes_count}</span> #{t('common.votes_on')} <span id='item_count'>#{@item_count}</span> #{t('common.ideas')}"
  .clear
  %center
    = render :partial => 'items/form', :locals => {:the_ab_test_name => @ab_test_ideas_text_name}
    %br
    #indicator.indicator{:style => "display:none;"}= image_tag('indicator.gif')
    .tellmearea
      -if @winner
        -if @skip
          == #{t('vote.you_skipped_both')} #{link_to(@winner, item_path(@winner_id, :question_id => @question_id))} #{t('common.and')} #{link_to(@loser, item_path(@loser_id, :question_id => @question_id))}
        -else
          == #{t('vote.you_chose')} #{link_to(@winner, item_path(@winner_id, :question_id => @question_id))} #{t('vote.over')} #{link_to(@loser, item_path(@loser_id, :question_id => @question_id))}.
      -elsif flash[:v_notice]
        %p.vote-notice#v_notice= flash[:v_notice]
        = javascript_tag "setTimeout(function() { $('#v_notice').fadeOut(1000); }, 3000);"
      -elsif flash[:v_error]
        %p.error#v_error= flash[:v_error]
        = javascript_tag "setTimeout(function() { $('#v_error').fadeOut(1000); }, 3000);"
      %p.error#length_error{:style => "display:none"}== #{t('items.new.too_long')} #{Const::MAX_ITEM_LENGTH} #{t('common.characters')}.

-unless session[:has_voted]
  -ab_test(@ab_test_stackoverflow_name, %w{control first_time no_first_time}, :conversion => 'voted') do |the_choice|
    - unless the_choice == 'control'
      .firsttime
        = t('ab_tests.test_stackoverflow.'+ the_choice)
        %span{:id => "close", :style => "float: right; padding-right: 15px; cursor: pointer;"}= "X";
   
#cant_decide_options{:style => 'display:none;'}
  %h2="I can't decide because..."
  -cant_decide_keys = ['like_both','dislike_both', 'dont_know_left', 'dont_know_right','dont_know_both','both_same', 'other']
  -cant_decide_keys.each do |choice|
    =radio_button_tag "cant_decide_reason", choice.to_s, false
    =t('vote.cd_'+choice)
    %br
  =link_to "Submit", {:anchor => ""}, :class => "cant_decide_submit_link", :id => "cant_decide_submit_btn", :rel => @question.id
  
-content_for :head do
  = javascript_include_tag 'facebox'
  = stylesheet_link_tag 'facebox'
      

-content_for :view_javascript do
  $('a[rel*=facebox]').facebox();
  -unless session[:has_voted]
    :plain
      $('.firsttime').fadeIn(2000)
      $('.firsttime, #close, .vote_cell').bind("click", function() {
        $(".firsttime").fadeOut(500);
      });
  =render :partial => 'vote_box_js' 
