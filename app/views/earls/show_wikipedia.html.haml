!!! 5
%html
  %head
    %link{:rel => "shortcut icon", :href => "http://www.allourideas.org/favicon.ico"}
    %title= t('common.title')
    = stylesheet_link_tag 'http://twitter.github.com/bootstrap/1.4.0/bootstrap.min.css'
    = javascript_include_tag 'http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js'
    = javascript_include_tag 'http://twitter.github.com/bootstrap/1.4.0/bootstrap-modal.js'
    :css
      body {
        margin-top: 10px;
      }

      div#header {
        opacity: 0.4;
        filter: alpha(opacity = 40);
      }
      
      div#header:hover {
        opacity: 1.0;
        filter: alpha(opacity = 100);
      }

      ul.nav {
        float: right;
      }

      ul.nav a:hover {
        color: #0069D6;
        text-decoration: underline;
      }

      h2.question {
        text-align: center;
        margin-bottom: 35px;
      }

      div.vote, #add-idea-background {
        height: 172px;
        border: 1px solid silver;
        background-repeat: no-repeat;
        background-position: left bottom;
        margin-bottom: 35px;
        width: 780px;
        margin-left: auto;
        margin-right: auto;
      }

      div.vote.left {
        margin-bottom: 10px;
      }

      #spinner {
        height: 25px;
        margin-bottom: 10px;
        text-align: center;
      }

      div.vote:hover {
        background-color: #eee;
        cursor: pointer;
      }

      div.vote .copy, #add-idea-background textarea {
        text-align: center;
        color: navy;
        font-family: Helvetica, Arial, sans-serif;
        font-size: 29px;
        font-weight: bold;
        height: 84px;
        line-height: 28px;
      }

      div.vote .copy{
        margin: 0;
        padding-bottom: 23px;
        padding-left: 210px;
        padding-right: 80px;
        padding-top: 43px;
      }

      #add-idea.modal {
        width: 810px; /* width of #add-idea-background+30px */
        margin-left: -420px;
      }

      #add-idea-background textarea {
        float: right;
        margin-right: 75px;
        margin-top: 45px;
        width: 475px;
        border: none;
        box-shadow: none;
        resize: none;
      }

      div.vote.loading {
        filter: alpha(opacity = 50);
        opacity: 0.5;
      }

      div.vote.loading:hover {
       cursor: wait;
      }

      div.vote.chosen {
        filter: alpha(opacity = 100);
        opacity: 1;
        border-color: #111;
        background-color: #ccc;
      }

      div#vote-footer {
        text-align: center;
        margin-bottom: 35px;
      }

      div.row.bottom {
        margin-bottom: 35px;
      }

      ul.faq li {
        margin-bottom: 20px;
      }

    - marketplaces_js_array = []
    - @marketplaces.each_with_index do |market, i|
      -# [pairwise-api.question_id, earl.name, pic.id]
      - marketplaces_js_array << "[#{market.question_id}, '#{market.name}', #{i+1}]"

    :javascript
      var AUTH_TOKEN = #{form_authenticity_token.inspect};
      var PAGE_LOADED_AT = new Date();
      var RAILS_LOCALE = '#{I18n.locale}';
      var MAX_VOTES_IN_MARKETPLACE_BEFORE_SWITCHING = 2;
      var CURRENT_VOTES_IN_MARKETPLACE = #{ session[:wikipedia][:current_votes_in_marketplace] || 0 };
      var CURRENT_MARKETPLACE_INDEX = #{ session[:wikipedia][:current_marketplace_index] || 0 };
      var MARKETPLACES = [
        #{marketplaces_js_array.join(',')}
      ];

      $(document).ready(function() {
        // get question and prompt on initial load
        CURRENT_MARKETPLACE = MARKETPLACES[CURRENT_MARKETPLACE_INDEX];
        $.get('/prompts/load_wikipedia_marketplace?question_id=' + CURRENT_MARKETPLACE[0], function(data) {
          loadNextPrompt(data);
          activateMarketplace(CURRENT_MARKETPLACE_INDEX);
          $('#spinner img').hide();
        });

        // voting
        $('.vote').live('click', function(e) {
      		if ($(this).hasClass('loading')) {
      			alert("One sec, we're loading the next pair...");
      		} else {
      		  $('#spinner img').show();
      			$(this).addClass('chosen');
      			$('.vote').addClass('loading');
      			castVote($(this));
      		}
      		e.preventDefault();
        });
      });

      function castVote(choice) {
      	var VOTE_CAST_AT = new Date();
      	vote_params = {
      	  direction: choice.attr('direction'),
          authenticity_token: encodeURIComponent(AUTH_TOKEN),
          time_viewed: VOTE_CAST_AT - PAGE_LOADED_AT,
          appearance_lookup: $('#appearance_lookup').val()
      	}

        CURRENT_VOTES_IN_MARKETPLACE++;
        if (CURRENT_VOTES_IN_MARKETPLACE >= MAX_VOTES_IN_MARKETPLACE_BEFORE_SWITCHING) {
          switching = true;
          switchMarketplace();
          $.extend(vote_params, {
            switch_marketplace: MARKETPLACES[CURRENT_MARKETPLACE_INDEX][0]
          });
        } else {
          switching = false;
        }

        // put this data in the session[:wikipedia]
        $.extend(vote_params, {
          wikipedia: {
            current_votes_in_marketplace: CURRENT_VOTES_IN_MARKETPLACE,
            current_marketplace_index: CURRENT_MARKETPLACE_INDEX
          }
        });

      	jQuery.ajax({
      		type: 'POST',
      		dataType: 'json',
      	  url: questionPromptUrl() + '/vote',
      	  data: vote_params,
      	  error: function(request, textStatus, errorThrown) {
      			voteError(request, textStatus, errorThrown);
      		},
      	  success: function(data, textStatus, request) {
            loadNextPrompt(data);
            if(switching) {activateMarketplace(CURRENT_MARKETPLACE_INDEX)};
      		}
      	});
      };

      function loadNextPrompt(data) {
        // the ordering of these functions is important
        // because some rely on attrs of the .vote
        // and others modify those attrs
        changeIdeas(data);
        updateUrlsAndHiddenFields(data);
        $('.vote').removeClass('loading'); 
        $('.vote').removeClass('chosen');
        $('#spinner img').hide();
        PAGE_LOADED_AT = new Date(); // reset the page load time
      }

      function changeIdeas(data) {
      	jQuery.each(['left', 'right'], function(index, side) {
      		var current_ad = $('.vote.' + side + ' > .copy');

          // change ideas
      		current_ad.html(data['new' + side]);
      	});
      }

      function updateUrlsAndHiddenFields(data) {
        // change appearance_lookup and prompt_id hidden fields
      	$('#appearance_lookup').val(data['appearance_lookup']);
      	$('#prompt_id').val(data['prompt_id']);
      }

      function voteError(request, textStatus, errorThrown) {
      	alert(textStatus);
      }

      function submitIdea() {
        idea_text = $('textarea[name=new_idea]').val();
        if (idea_text != 'Add text here' && idea_text != '') {
          $('#add-idea #submit-button').addClass('disabled');
          $.post(questionUrl() + '/add_idea.js?locale=en',
            {authenticity_token: AUTH_TOKEN, new_idea: idea_text},
            function(data){
              $('#add-idea.modal').modal('hide');
              $('textarea[name=new_idea]').val('Add text here');
              $('#add-idea #submit-button').removeClass('disabled');
              $('#add-idea-thanks').show();
              $('#add-idea-thanks').fadeOut(5000);
            }
          );
        }
        return false;
      }

      function submitCantDecide(reason) {
        $('#spinner img').show();
        var CANT_DECIDE_AT = new Date();
        $('.vote').addClass('loading');
        $('#cant-decide').modal('hide');
        $.post(questionPromptUrl() + '/skip.js',
          {
            authenticity_token: AUTH_TOKEN,
            cant_decide_reason: reason,
            appearance_lookup: $('#appearance_lookup').val(),
            time_viewed: CANT_DECIDE_AT - PAGE_LOADED_AT
          },
          function(data) {
            loadNextPrompt(data);
          }
        );
      }

      function switchMarketplace() {
        CURRENT_VOTES_IN_MARKETPLACE = 0;
        if (CURRENT_MARKETPLACE_INDEX+1 > MARKETPLACES.length-1) {
          CURRENT_MARKETPLACE_INDEX = 0;
        } else {
          CURRENT_MARKETPLACE_INDEX++;
        }
      }

      function activateMarketplace(index) {
        question_id = MARKETPLACES[index][0];
        earl_name   = MARKETPLACES[index][1];
        pic_id      = MARKETPLACES[index][2];

        $('#question_idd').val(question_id);
        $('#view_results_link').attr('href', '/' + earl_name + '/results');
        $('div.vote, #add-idea-background').css('backgroundImage', 'url(/images/wikipedia/ad/' + pic_id  + '.png)');
      }

      function questionPromptUrl() {
        return questionUrl() + '/prompts/' + $('#prompt_id').val();
      }

      function questionUrl() {
       return '/questions/' + $('#question_idd').val();
      }

  %body
    =hidden_field_tag 'question_idd'
    =hidden_field_tag 'appearance_lookup'
    =hidden_field_tag 'prompt_id'
    .container
      .row
        #header{:style => 'border-bottom: 1px solid #DDD; overflow:hidden; padding-bottom: 10px; margin-bottom: 10px;'}
          =link_to image_tag('wikipedia/hearts_wikipedia.png'), root_url, :style => 'float:left'
      
          %ul.nav{:style => 'float:right;'}
            %li= link_to t('vote.cast_votes'), "/#{@earl.name}", :style => "color:#999; text-decoration:none;"
            %li= link_to_function t('nav.view_results'), "alert('coming soon...')" #"/#{@earl.name}/results", :id => 'view_results_link'
            %li= link_to 'FAQ', '#faq'

      #add-idea-thanks.alert-message.success{:style => 'display:none;'}
        %p
          %strong Thanks!
          Your idea has been submitted for review. It will appear soon.

      .row
        / %h2.question= @question.name
        %h2.question{:style => 'font-size:20px'} Please click on the Wikipedia fundraising banner that makes you want to donate more.
        .vote.left{:direction => 'left', :id => 'leftside'}
          .copy
            =truncate(h(@left_choice_text), :length => 137)

        #spinner
          =image_tag('wikipedia/spinner.gif')

        .vote.right{:direction => 'right', :id => 'rightside'}
          .copy
            =truncate(h(@right_choice_text), :length => 137)

      #vote-footer.row
        %p= link_to "I can't decide", '#', 'data-controls-modal' => 'cant-decide', 'data-backdrop' => 'static'
        %p= link_to "Create new text for this banner", "#", :class => 'btn success', 'data-controls-modal' => 'add-idea', 'data-backdrop' => 'static'

      #add-idea.modal{:style => 'display:none;'}
        .modal-header
          =link_to 'x', '#', :class => 'close'
          %h3 Create new text for this banner
        .modal-body
          #add-idea-background
            =text_area_tag('new_idea', 'Add text here', :title => 'Add text here', :placeholder => 'Add text here', :maxlength => Const::MAX_ITEM_LENGTH)
        .modal-footer
          =link_to_function t('vote.submit'), "submitIdea()", :class => 'btn primary', :id => 'submit-button'

      #cant-decide.modal{:style => 'display:none'}
        .modal-header
          =link_to 'x', '#', :class => 'close'
          %h3= t('vote.cant_decide_title')
        .modal-body        
          -cd_options= [['I like both banners', 'like_both'], ['I think both banners are basically the same', 'both_same'], ["I don't like either banner",'dislike_both']]
          - cd_options.each do |choice|
            %p= link_to_function choice[0], "submitCantDecide('#{choice[1]}')"

      #faq.row.bottom
        %h3 The <strike>encyclopedia</strike> fundraiser than anyone can edit
        %p
          Only about one in a thousand Wikipedia users donate, but we think we can improve that -- by finding better text for the banners.  For a given picture, you will see two possible banner texts.  Please click on the one that makes you want to donate more.  If you have a suggestion for better text, please upload it.  Some of the best ideas will appear on real banners during the fundraiser.  This is the <strike>encyclopedia</strike> fundraiser anyone can edit.

      .row.bottom
        %h3 FAQ
        %ul.faq
          %li
            %h5 How can I donate to Wikimedia Foundation, the parent organization of Wikipedia?
            %p You can #{link_to 'donate here', 'http://wikimediafoundation.org/wiki/Donate'}.
          %li
            %h5 What does Wikipedia and the Wikimedia Foundation do with the donations?
            %p Good stuff.  The two biggest expenses are technology and people.  You can read more about this in their #{link_to 'financial reports', 'http://wikimediafoundation.org/wiki/Home'}.
          %li
            %h5 Does Wikipedia know about this project?
            %p Of course.  In fact, they are watching the results carefully and will try out some of best ideas they see here.  That means that your text could be on banners all over the world.
          %li
            %h5 Why do I always see the same picture on both banners?
            %p We are trying to find the best banner text to go with each picture.  This head-to-head comparison is the best way to do it.
          %li
            %h5 Can I suggest a new image for a banner?
            %p Sure, you can suggest any image from Wikimedia Commons.  Please email us a link to the image (#{mail_to 'info@allourideas.org'}) and we will review it.
          %li
            %h5 Does this ever end?
            %p Nope.  Please keep voting as long as you want.  Each vote is helpful, and we will collect and process as many or as few as you will give us.
          %li
            %h5 What new banner text should I suggest? I can’t think of anything.
            %p Don’t worry, just upload it.  Be bold because the voting process will help us find the best.
          %li
            %h5 Can I be on a Wikipedia banner?
            %p Maybe.  Wikimedia Foundation is always looking for new people to be on banners.  Please send a message to #{mail_to 'wikistory@wikimedia.org'} with a compelling message about your personal Wikipedia experience and why you want to help.
          %li
            %h5 How can I get more involved in this project?
            %p Please email your suggestions, bug reports, or favorite joke to #{mail_to 'info@allourideas.org'}.
          %li
            %h5 What is #{link_to 'www.allourideas.org', 'http://www.allourideas.org'}?
            %p All Our Ideas is a research project to develop a new form of social data collection that combines the openness of interview with the quantification of a survey.  We love Wikipedia so we decided to try to help out with the fundraiser.  The #{link_to 'All Our Ideas', 'http://www.allourideas.org/about'} team is led by #{link_to 'Matthew Salganik', 'http://www.princeton.edu/~mjs3/'} from the #{link_to 'Department of Sociology at Princeton University', 'http://www.princeton.edu/sociology/'}, and the project is funded by grants from #{link_to 'Google', 'http://research.google.com/university/relations/research_awards.html'} and #{link_to 'Center for Information Technology Policy', 'http://citp.princeton.edu/'} at #{link_to 'Princeton University', 'http://www.princeton.edu/main/'}.  You can learn more about the project on the #{link_to 'allourideas blog', 'http://blog.allourideas.org/'}.

          %p{:style => 'text-align:center;'} #{link_to 'allourideas.org', 'http://www.allourideas.org'} is powered by #{link_to 'open-source software', 'http://github.com/allourideas'} | #{link_to 'Blog', 'http://blog.allourideas.org'} | #{link_to 'Twitter', 'http://twitter.com/allourideas'} | #{link_to 'Facebook', 'http://www.facebook.com/allourideas'} | #{link_to 'Github', 'http://github.com/allourideas'}

    -if !RAILS_ENV['production']
      :javascript
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));

      :javascript
        try {
        var pageTracker = _gat._getTracker("UA-11703548-1");
        pageTracker._trackPageview();
        - if @earl && @earl.ga_code != ""
          = "var pageTracker = _gat._getTracker('#{h(@earl.ga_code)}');"
          pageTracker._trackPageview();
        } catch(err) {}